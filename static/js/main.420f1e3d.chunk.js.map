{"version":3,"sources":["_helpers/fake-backend.js","_helpers/history.js","_helpers/auth-header.js","_constants/alert.constants.js","_constants/user.constants.js","_reducers/authentication.reducer.js","_reducers/index.js","_reducers/registration.reducer.js","_reducers/user.reducer.js","_reducers/alert.reducer.js","_helpers/store.js","_actions/alert.actions.js","config.js","_services/user.service.js","_actions/user.actions.js","_components/PrivateRoute.js","_components/HomePage.js","_components/LoginPage.js","_components/RegisterPage.js","App.js","serviceWorker.js","index.js"],"names":["users","JSON","parse","localStorage","getItem","history","createBrowserHistory","authHeader","user","token","Authorization","alertConstants","userConstants","initialState","loggedIn","rootReducer","combineReducers","authentication","state","action","type","loggingIn","registration","registering","loading","items","error","map","id","deleting","filter","userCopy","deleteError","alert","message","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","alertActions","success","clear","config","appUri","userService","login","username","password","requestOptions","method","headers","body","stringify","fetch","apiUrl","then","handleResponse","setItem","logout","register","getAll","getById","update","delete","removeItem","response","text","data","ok","status","location","reload","statusText","Promise","reject","userActions","dispatch","push","failure","toString","request","PrivateRoute","Component","component","rest","render","props","to","pathname","from","HomePage","useSelector","useDispatch","useEffect","className","firstName","index","key","lastName","onClick","LoginPage","useState","inputs","setInputs","submitted","setSubmitted","handleChange","e","target","name","value","onSubmit","preventDefault","onChange","RegisterPage","setUser","App","listen","exact","path","Boolean","window","hostname","match","realFetch","url","opts","resolve","setTimeout","endsWith","params","filteredUsers","length","responseJson","urlParts","split","parseInt","matchedUsers","newUser","Math","max","i","splice","configureFakeBackend","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","unregister","catch","console"],"mappings":"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","file":"static/js/main.420f1e3d.chunk.js","sourcesContent":["// array in local storage for registered users\nlet users = JSON.parse(localStorage.getItem(\"users\")) || [];\n\nexport function configureFakeBackend() {\n  let realFetch = window.fetch;\n  window.fetch = function (url, opts) {\n    return new Promise((resolve, reject) => {\n      // wrap in timeout to simulate server api call\n      setTimeout(() => {\n        // authenticate\n        if (url.endsWith(\"/users/authenticate\") && opts.method === \"POST\") {\n          // get parameters from post request\n          let params = JSON.parse(opts.body);\n\n          // find if any user matches login credentials\n          let filteredUsers = users.filter((user) => {\n            return (\n              user.username === params.username &&\n              user.password === params.password\n            );\n          });\n\n          if (filteredUsers.length) {\n            // if login details are valid return user details and fake jwt token\n            let user = filteredUsers[0];\n            let responseJson = {\n              id: user.id,\n              username: user.username,\n              firstName: user.firstName,\n              lastName: user.lastName,\n              token: \"fake-jwt-token\",\n            };\n            resolve({\n              ok: true,\n              text: () => Promise.resolve(JSON.stringify(responseJson)),\n            });\n          } else {\n            // else return error\n            reject(\"Username or password is incorrect\");\n          }\n\n          return;\n        }\n\n        // get users\n        if (url.endsWith(\"/users\") && opts.method === \"GET\") {\n          // check for fake auth token in header and return users if valid, this security is implemented server side in a real application\n          if (\n            opts.headers &&\n            opts.headers.Authorization === \"Bearer fake-jwt-token\"\n          ) {\n            resolve({\n              ok: true,\n              text: () => Promise.resolve(JSON.stringify(users)),\n            });\n          } else {\n            // return 401 not authorised if token is null or invalid\n            reject(\"Unauthorised\");\n          }\n\n          return;\n        }\n\n        // get user by id\n        if (url.match(/\\/users\\/\\d+$/) && opts.method === \"GET\") {\n          // check for fake auth token in header and return user if valid, this security is implemented server side in a real application\n          if (\n            opts.headers &&\n            opts.headers.Authorization === \"Bearer fake-jwt-token\"\n          ) {\n            // find user by id in users array\n            let urlParts = url.split(\"/\");\n            let id = parseInt(urlParts[urlParts.length - 1]);\n            let matchedUsers = users.filter((user) => {\n              return user.id === id;\n            });\n            let user = matchedUsers.length ? matchedUsers[0] : null;\n\n            // respond 200 OK with user\n            resolve({ ok: true, text: () => JSON.stringify(user) });\n          } else {\n            // return 401 not authorised if token is null or invalid\n            reject(\"Unauthorised\");\n          }\n\n          return;\n        }\n\n        // register user\n        if (url.endsWith(\"/users/register\") && opts.method === \"POST\") {\n          // get new user object from post body\n          let newUser = JSON.parse(opts.body);\n\n          // validation\n          let duplicateUser = users.filter((user) => {\n            return user.username === newUser.username;\n          }).length;\n          if (duplicateUser) {\n            reject('Username \"' + newUser.username + '\" is already taken');\n            return;\n          }\n\n          // save new user\n          newUser.id = users.length\n            ? Math.max(...users.map((user) => user.id)) + 1\n            : 1;\n          users.push(newUser);\n          localStorage.setItem(\"users\", JSON.stringify(users));\n\n          // respond 200 OK\n          resolve({ ok: true, text: () => Promise.resolve() });\n\n          return;\n        }\n\n        // delete user\n        if (url.match(/\\/users\\/\\d+$/) && opts.method === \"DELETE\") {\n          // check for fake auth token in header and return user if valid, this security is implemented server side in a real application\n          if (\n            opts.headers &&\n            opts.headers.Authorization === \"Bearer fake-jwt-token\"\n          ) {\n            // find user by id in users array\n            let urlParts = url.split(\"/\");\n            let id = parseInt(urlParts[urlParts.length - 1]);\n            for (let i = 0; i < users.length; i++) {\n              let user = users[i];\n              if (user.id === id) {\n                // delete user\n                users.splice(i, 1);\n                localStorage.setItem(\"users\", JSON.stringify(users));\n                break;\n              }\n            }\n\n            // respond 200 OK\n            resolve({ ok: true, text: () => Promise.resolve() });\n          } else {\n            // return 401 not authorised if token is null or invalid\n            reject(\"Unauthorised\");\n          }\n\n          return;\n        }\n\n        // pass through any requests not handled above\n        realFetch(url, opts).then((response) => resolve(response));\n      }, 500);\n    });\n  };\n}\n","import { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();\n","export function authHeader() {\n  // return authorization header with jwt token\n  let user = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (user && user.token) {\n    return { Authorization: \"Bearer \" + user.token };\n  } else {\n    return {};\n  }\n}\n","export const alertConstants = {\n    SUCCESS: 'SUCCESS',\n    ERROR: 'ERROR',\n    CLEAR: 'CLEAR'\n}","export const userConstants = {\n  REGISTER_REQUEST: \"USERS_REGISTER_REQUEST\",\n  REGISTER_SUCCESS: \"USERS_REGISTER_SUCCESS\",\n  REGISTER_FAILURE: \"USERS_REGISTER_FAILURE\",\n\n  LOGIN_REQUEST: \"USERS_LOGIN_REQUEST\",\n  LOGIN_SUCCESS: \"USERS_LOGIN_SUCCESS\",\n  LOGIN_FAILURE: \"USERS_LOGIN_FAILURE\",\n\n  LOGOUT: \"USERS_LOGOUT\",\n\n  GETALL_REQUEST: \"USERS_GETALL_REQUEST\",\n  GETALL_SUCCESS: \"USERS_GETALL_SUCCESS\",\n  GETALL_FAILURE: \"USERS_GETALL_FAILURE\",\n\n  DELETE_REQUEST: \"USERS_DELETE_REQUEST\",\n  DELETE_SUCCESS: \"USERS_DELETE_SUCCESS\",\n  DELETE_FAILURE: \"USERS_DELETE_FAILURE\",\n};\n","import { userConstants } from \"../_constants\";\n\nlet user = JSON.parse(localStorage.getItem(\"user\"));\nconst initialState = user ? { loggedIn: true, user } : {};\n\nexport function authentication(state = initialState, action) {\n  switch (action.type) {\n    case userConstants.LOGIN_REQUEST:\n      return {\n        loggingIn: true,\n        user: action.user,\n      };\n    case userConstants.LOGIN_SUCCESS:\n      return {\n        loggedIn: true,\n        user: action.user,\n      };\n    case userConstants.LOGIN_FAILURE:\n      return {};\n    case userConstants.LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport { authentication } from './authentication.reducer';\nimport { registration } from './registration.reducer';\nimport { users } from './user.reducer';\nimport { alert } from './alert.reducer';\n\nconst rootReducer = combineReducers({\n  authentication,\n  registration,\n  users,\n  alert\n});\n\nexport default rootReducer;","import { userConstants } from \"../_constants\";\n\nexport function registration(state = {}, action) {\n  switch (action.type) {\n    case userConstants.REGISTER_REQUEST:\n      return { registering: true };\n    case userConstants.REGISTER_SUCCESS:\n      return {};\n    case userConstants.REGISTER_FAILURE:\n      return {};\n    default:\n      return state;\n  }\n}\n","import { userConstants } from \"../_constants\";\n\nexport function users(state = {}, action) {\n  switch (action.type) {\n    case userConstants.GETALL_REQUEST:\n      return {\n        loading: true,\n      };\n    case userConstants.GETALL_SUCCESS:\n      return {\n        items: action.users,\n      };\n    case userConstants.GETALL_FAILURE:\n      return {\n        error: action.error,\n      };\n    case userConstants.DELETE_REQUEST:\n      // add 'deleting:true' property to user being deleted\n      return {\n        ...state,\n        items: state.items.map((user) =>\n          user.id === action.id ? { ...user, deleting: true } : user\n        ),\n      };\n    case userConstants.DELETE_SUCCESS:\n      // remove deleted user from state\n      return {\n        items: state.items.filter((user) => user.id !== action.id),\n      };\n    case userConstants.DELETE_FAILURE:\n      // remove 'deleting:true' property and add 'deleteError:[error]' property to user\n      return {\n        ...state,\n        items: state.items.map((user) => {\n          if (user.id === action.id) {\n            // make copy of user without 'deleting:true' property\n            const { deleting, ...userCopy } = user;\n            // return copy of user with 'deleteError:[error]' property\n            return { ...userCopy, deleteError: action.error };\n          }\n\n          return user;\n        }),\n      };\n    default:\n      return state;\n  }\n}\n","import { alertConstants } from \"../_constants\";\n\nexport function alert(state = {}, action) {\n  switch (action.type) {\n    case alertConstants.SUCCESS:\n      return {\n        type: \"alert-success\",\n        message: action.message,\n      };\n    case alertConstants.ERROR:\n      return {\n        type: \"alert-danger\",\n        message: action.message,\n      };\n    case alertConstants.CLEAR:\n      return {};\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../_reducers';\n\nconst loggerMiddleware = createLogger();\n\nexport const store = createStore(\n    rootReducer,\n    applyMiddleware(\n        thunkMiddleware,\n        loggerMiddleware\n    )\n);","import { alertConstants } from \"../_constants\"\n\nexport const alertActions = {\n    success,\n    error,\n    clear\n}\n\nfunction success(message) {\n    return {\n        type: alertConstants.SUCCESS,\n        message\n    }\n}\n\nfunction error(message) {\n    return {\n        type: alertConstants.ERROR,\n        message\n    }\n}\n\nfunction clear() {\n    return {\n        type: alertConstants.CLEAR\n    }\n}","export const config = {\n    appUri: 'http://localhost:3000/'\n}","import { config } from \"../config\";\nimport { authHeader } from \"../_helpers\";\n\nexport const userService = {\n  login,\n  logout,\n  register,\n  getAll,\n  getById,\n  update,\n  delete: _delete,\n};\n\nfunction login(username, password) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ username, password }),\n  };\n\n  return fetch(`${config.apiUrl}/users/authenticate`, requestOptions)\n    .then(handleResponse)\n    .then((user) => {\n      // store user details and jwt token in local storage to keep user logged in between page refreshes\n      localStorage.setItem(\"user\", JSON.stringify(user));\n\n      return user;\n    });\n}\n\nfunction logout() {\n  // remove user from local storage to log user out\n  localStorage.removeItem(\"user\");\n}\n\nfunction getAll() {\n  const requestOptions = {\n    method: \"GET\",\n    headers: authHeader(),\n  };\n\n  return fetch(`${config.apiUrl}/users`, requestOptions).then(handleResponse);\n}\n\nfunction getById(id) {\n  const requestOptions = {\n    method: \"GET\",\n    headers: authHeader(),\n  };\n\n  return fetch(`${config.apiUrl}/users/${id}`, requestOptions).then(\n    handleResponse\n  );\n}\n\nfunction register(user) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(user),\n  };\n\n  return fetch(`${config.apiUrl}/users/register`, requestOptions).then(\n    handleResponse\n  );\n}\n\nfunction update(user) {\n  const requestOptions = {\n    method: \"PUT\",\n    headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(user),\n  };\n\n  return fetch(`${config.apiUrl}/users/${user.id}`, requestOptions).then(\n    handleResponse\n  );\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n  const requestOptions = {\n    method: \"DELETE\",\n    headers: authHeader(),\n  };\n\n  return fetch(`${config.apiUrl}/users/${id}`, requestOptions).then(\n    handleResponse\n  );\n}\n\nfunction handleResponse(response) {\n  return response.text().then((text) => {\n    const data = text && JSON.parse(text);\n    if (!response.ok) {\n      if (response.status === 401) {\n        // auto logout if 401 response returned from api\n        logout();\n        // eslint-disable-next-line no-restricted-globals\n        location.reload(true);\n      }\n\n      const error = (data && data.message) || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}\n","import { userConstants } from \"../_constants\";\nimport { userService } from \"../_services\";\nimport { history } from \"../_helpers\";\nimport { alertActions } from \"./alert.actions\";\nexport const userActions = {\n  login,\n  logout,\n  register,\n  getAll,\n  delete: _delete\n};\n\nfunction login(username, password) {\n  return (dispatch) => {\n    dispatch(request({ username }));\n    userService.login(username, password).then(\n      (user) => {\n        dispatch(success(user));\n        history.push(\"/\");\n      },\n      (error) => {\n        dispatch(failure(error.toString()));\n        dispatch(alertActions.error(error.toString()));\n      }\n    );\n  };\n  function request(user) {\n    return { type: userConstants.LOGIN_REQUEST, user };\n  }\n  function success(user) {\n    return { type: userConstants.LOGIN_SUCCESS, user };\n  }\n  function failure(error) {\n    return { type: userConstants.LOGIN_FAILURE, error };\n  }\n}\n\nfunction logout() {\n  userService.logout();\n  return {\n    type: userConstants.LOGOUT,\n  };\n}\n\nfunction register(user) {\n  return (dispatch) => {\n    dispatch(request(user));\n\n    userService.register(user).then(\n      (user) => {\n        dispatch(success());\n        history.push(\"/login\");\n        dispatch(alertActions.success(\"Registration successful\"));\n      },\n      (error) => {\n        dispatch(failure(error.toString()));\n        dispatch(alertActions.error(error.toString()));\n      }\n    );\n  };\n\n  function request(user) {\n    return { type: userConstants.REGISTER_REQUEST, user };\n  }\n  function success(user) {\n    return { type: userConstants.REGISTER_SUCCESS, user };\n  }\n  function failure(error) {\n    return { type: userConstants.REGISTER_FAILURE, error };\n  }\n}\n\nfunction getAll() {\n  return (dispatch) => {\n    dispatch(request());\n\n    userService.getAll().then(\n      (users) => dispatch(success(users)),\n      (error) => dispatch(failure(error.toString()))\n    );\n  };\n\n  function request() {\n    return { type: userConstants.GETALL_REQUEST };\n  }\n  function success(users) {\n    return { type: userConstants.GETALL_SUCCESS, users };\n  }\n  function failure(error) {\n    return { type: userConstants.GETALL_FAILURE, error };\n  }\n}\n\nfunction _delete(id) {\n  return (dispatch) => {\n    dispatch(request(id));\n\n    userService.delete(id).then(\n      (user) => dispatch(success(id)),\n      (error) => dispatch(failure(id, error.toString()))\n    );\n  };\n\n  function request(id) {\n    return { type: userConstants.DELETE_REQUEST, id };\n  }\n  function success(id) {\n    return { type: userConstants.DELETE_SUCCESS, id };\n  }\n  function failure(id, error) {\n    return { type: userConstants.DELETE_FAILURE, id, error };\n  }\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => (\n        localStorage.getItem('user')\n            ? <Component {...props} />\n            : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n    )} />\n)","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { userActions } from \"../_actions\";\n\nfunction HomePage() {\n  const users = useSelector((state) => state.users);\n  const user = useSelector((state) => state.authentication.user);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(userActions.getAll());\n  }, [dispatch]);\n\n  function handleDeleteUser(id) {\n    dispatch(userActions.delete(id));\n  }\n\n  return (\n    <div className=\"col-lg-8 offset-lg-2\">\n      <h1>Hi {user.firstName}!</h1>\n      <p>You're logged in with React Hooks!!</p>\n      <h3>All registered users:</h3>\n      {users.loading && <em>Loading users...</em>}\n      {users.error && <span className=\"text-danger\">ERROR: {users.error}</span>}\n      {users.items && (\n        <ul>\n          {users.items.map((user, index) => (\n            <li key={user.id}>\n              {user.firstName + \" \" + user.lastName}\n              {user.deleting ? (\n                <em> - Deleting...</em>\n              ) : user.deleteError ? (\n                <span className=\"text-danger\">\n                  {\" \"}\n                  - ERROR: {user.deleteError}\n                </span>\n              ) : (\n                <span>\n                  {\" \"}\n                  -{\" \"}\n                  <a\n                    onClick={() => handleDeleteUser(user.id)}\n                    className=\"text-primary\"\n                  >\n                    Delete\n                  </a>\n                </span>\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n      <p>\n        <Link to=\"/login\">Logout</Link>\n      </p>\n    </div>\n  );\n}\n\nexport { HomePage };\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { userActions } from \"../_actions\";\n\nfunction LoginPage() {\n  const [inputs, setInputs] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  const [submitted, setSubmitted] = useState(false);\n  const { username, password } = inputs;\n  const loggingIn = useSelector((state) => state.authentication.loggingIn);\n  const dispatch = useDispatch();\n\n  // reset login status\n  useEffect(() => {\n    dispatch(userActions.logout());\n  }, [dispatch]);\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setInputs((inputs) => ({ ...inputs, [name]: value }));\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    setSubmitted(true);\n    if (username && password) {\n      dispatch(userActions.login(username, password));\n    }\n  }\n\n  return (\n    <div className=\"col-lg-8 offset-lg-2\">\n      <h2>Login</h2>\n      <form name=\"form\" onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Username</label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            onChange={handleChange}\n            className={\n              \"form-control\" + (submitted && !username ? \" is-invalid\" : \"\")\n            }\n          />\n          {submitted && !username && (\n            <div className=\"invalid-feedback\">Username is required</div>\n          )}\n        </div>\n        <div className=\"form-group\">\n          <label>Password</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            className={\n              \"form-control\" + (submitted && !password ? \" is-invalid\" : \"\")\n            }\n          />\n          {submitted && !password && (\n            <div className=\"invalid-feedback\">Password is required</div>\n          )}\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn btn-primary\">\n            {loggingIn && (\n              <span className=\"spinner-border spinner-border-sm mr-1\"></span>\n            )}\n            Login\n          </button>\n          <Link to=\"/register\" className=\"btn btn-link\">\n            Register\n          </Link>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport { LoginPage };\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { userActions } from \"../_actions\";\n\nfunction RegisterPage() {\n  const [user, setUser] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    username: \"\",\n    password: \"\",\n  });\n  const [submitted, setSubmitted] = useState(false);\n  const registering = useSelector((state) => state.registration.registering);\n  const dispatch = useDispatch();\n\n  // reset login status\n  useEffect(() => {\n    dispatch(userActions.logout());\n  }, [dispatch]);\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setUser((user) => ({ ...user, [name]: value }));\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    setSubmitted(true);\n    if (user.firstName && user.lastName && user.username && user.password) {\n      dispatch(userActions.register(user));\n    }\n  }\n\n  return (\n    <div className=\"col-lg-8 offset-lg-2\">\n      <h2>Register</h2>\n      <form name=\"form\" onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>First Name</label>\n          <input\n            type=\"text\"\n            name=\"firstName\"\n            value={user.firstName}\n            onChange={handleChange}\n            className={\n              \"form-control\" +\n              (submitted && !user.firstName ? \" is-invalid\" : \"\")\n            }\n          />\n          {submitted && !user.firstName && (\n            <div className=\"invalid-feedback\">First Name is required</div>\n          )}\n        </div>\n        <div className=\"form-group\">\n          <label>Last Name</label>\n          <input\n            type=\"text\"\n            name=\"lastName\"\n            value={user.lastName}\n            onChange={handleChange}\n            className={\n              \"form-control\" +\n              (submitted && !user.lastName ? \" is-invalid\" : \"\")\n            }\n          />\n          {submitted && !user.lastName && (\n            <div className=\"invalid-feedback\">Last Name is required</div>\n          )}\n        </div>\n        <div className=\"form-group\">\n          <label>Username</label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={user.username}\n            onChange={handleChange}\n            className={\n              \"form-control\" +\n              (submitted && !user.username ? \" is-invalid\" : \"\")\n            }\n          />\n          {submitted && !user.username && (\n            <div className=\"invalid-feedback\">Username is required</div>\n          )}\n        </div>\n        <div className=\"form-group\">\n          <label>Password</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={user.password}\n            onChange={handleChange}\n            className={\n              \"form-control\" +\n              (submitted && !user.password ? \" is-invalid\" : \"\")\n            }\n          />\n          {submitted && !user.password && (\n            <div className=\"invalid-feedback\">Password is required</div>\n          )}\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn btn-primary\">\n            {registering && (\n              <span className=\"spinner-border spinner-border-sm mr-1\"></span>\n            )}\n            Register\n          </button>\n          <Link to=\"/login\" className=\"btn btn-link\">\n            Cancel\n          </Link>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport { RegisterPage };\n","import \"./App.css\";\nimport React, { useEffect } from \"react\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { history } from \"./_helpers\";\nimport { alertActions } from \"./_actions\";\nimport { PrivateRoute } from './_components';\nimport { HomePage } from './_components';\nimport { LoginPage } from './_components';\nimport { RegisterPage } from './_components';\n\nfunction App() {\n  const alert = useSelector((state) => state.alert);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    history.listen((location, action) => {\n      // clear alert on location change\n      dispatch(alertActions.clear());\n    });\n  }, [dispatch]);\n  return (\n    <div className=\"jumbotron\">\n      <div className=\"container\">\n        <div className=\"col-md-8 offset-md-2\">\n          {alert.message && (\n            <div className={`alert ${alert.type}`}>{alert.message}</div>\n          )}\n          <Router history={history}>\n            <Switch>\n              <PrivateRoute exact path=\"/\" component={HomePage} />\n              <Route path=\"/login\" component={LoginPage} />\n              <Route path=\"/register\" component={RegisterPage} />\n              <Redirect from=\"*\" to=\"/\" />\n            </Switch>\n          </Router>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { store, configureFakeBackend } from './_helpers';\n\nconfigureFakeBackend();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}